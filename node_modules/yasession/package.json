{
  "author": {
    "name": "Jaakko-Heikki Heusala",
    "email": "jheusala@iki.fi",
    "url": "http://www.jhh.me"
  },
  "name": "yasession",
  "description": "Yet another session implementation for Node.js",
  "version": "0.0.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/jheusala/node-yasession.git"
  },
  "main": "src/Session.js",
  "engines": {
    "node": "~v0.4.10"
  },
  "dependencies": {
    "snippets": ">=0.0.5",
    "cookies": ">=0.1.6",
    "json-object": ">=0.0.2"
  },
  "devDependencies": {},
  "readme": "\nYet another session implementation for Node.js\n==============================================\n\nDescription\n-----------\n\nThis is a yet another session implementation for Node.js.\n\nI know that there's a lot of Session modules for Node.js but I failed to find \none like [Cookies](https://github.com/jed/cookies/) that was keep-it-simple and \nstandalone.\n\nCurrently the module saves sessions to the filesystem but that should be \nchanged to use some kind of plugable storing method.\n\nInstallation\n------------\n\nSimplest way to install is to use [npm](http://npmjs.org/), just simply `npm install yasession`.\n\nLicense\n-------\n\nMIT-style license, see [INSTALL.txt](http://github.com/jheusala/node-yasession/blob/master/LICENSE.txt).\n\nExample Code\n------------\n\n\trequire('http').createServer(function (req, res) {\n\t\tvar session = require('yasession')(req, res, {'dir':'/tmp'});\n\t\t\n\t\tif(!session.date) session.date = new Date();\n\t\t\n\t\tif(!session.counter) session.counter = 0;\n\t\tsession.counter++;\n\t\t\n\t\tres.writeHead(200, {'Content-Type': 'text/plain'});\n\t\tres.end('Hello World\\nThis is your ' + session.counter + \" visit here after \"+ session.date.toDateString() + \".\");\n\t\t\n\t}).listen(1337, \"127.0.0.1\");\n\tconsole.log('Server running at http://127.0.0.1:1337/');\n\nyasession(request, response, options)\n----------------------------\n\n### request\n\nStandard Node.js HTTP/HTTPS request object.\n\n### response\n\nStandard Node.js HTTP/HTTPS response object.\n\n### options.debug\n\nIf `true` then additional debug messages are printed with `util.log`. Default is `false`.\n\n### options.cookie\n\nCookie name. Default is `YASESS`.\n\n### options.domain\n\nOptional domain setting for cookies.\n\n### options.prefix\n\nPrefix for session files. Default is `sess`.\n\n### options.dir\n\nDirectory where to save JSON files. Default is `./tmp/cookies`.\n\n### options.useStandardJSON\n\nBy default `yasession` is using \n[json-object](https://github.com/jheusala/node-json-object) to parse and \nstringify JSON. This can be changed by turning this option to `false`.\n",
  "readmeFilename": "README.md",
  "_id": "yasession@0.0.3",
  "dist": {
    "shasum": "939fb4c563736d31740a002bbce1c83e9c2063ce"
  },
  "_from": "yasession"
}
