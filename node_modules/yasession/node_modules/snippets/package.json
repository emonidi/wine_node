{
  "name": "snippets",
  "description": "JavaScript Snippet Collection",
  "version": "0.0.6",
  "homepage": "http://github.com/jheusala/js-snippets",
  "repository": {
    "type": "git",
    "url": "git://github.com/jheusala/js-snippets.git"
  },
  "author": {
    "name": "Jaakko-Heikki Heusala",
    "email": "jheusala@iki.fi",
    "url": "http://www.jhh.me"
  },
  "main": "./lib/snippets.js",
  "directories": {
    "lib": "lib"
  },
  "scripts": {
    "test": "./tests/runner.js"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {},
  "devDependencies": {},
  "readme": "JavaScript Snippet Collection\n=============================\n\nDescription\n-----------\n\nSmall collection of useful small snippets for JavaScript and \n[Node.js](http://www.nodejs.org). Designed to be lightweight, independent and \nundisruptive as much as possible.\n\nFeatures\n--------\n\n* is -- Check variable types\n* foreach -- For each element in array or object or the element itself\n* split -- Split variable into smaller chunks by regexp\n* join -- Join array or object as a string with multiple seperators\n* pass -- Pass vector values to a callback as arguments\n\nInstallation for Node.js\n------------------------\n\nSimplest way to install is to use [npm](http://npmjs.org/), just simply `npm install snippets`.\n\nLicense\n-------\n\nMIT-style license, see [INSTALL.txt](http://github.com/jheusala/js-snippets/blob/master/LICENSE.txt).\n\nInitializing\n------------\n\nEvery feature is a property of snippets:\n\n    var foreach = require('snippets').foreach;\n    var split = require('snippets').split;\n    var pass = require('snippets').pass;\n\nSee [examples/](http://github.com/jheusala/js-snippets/tree/master/examples) for full examples.\n\nIs\n--\n\n\tvar is = require('snippets').is;\n\tvar a = [1,2,3,4,5];\n\tif(is.array(a)) console.log(\"a is array\");\n\telse if(is.object(a)) console.log(\"a is object\");\n\telse console.log(\"a is not array nor object\");\n\nForeach\n-------\n\nWrite each array element to console:\n\n\tvar a = [1,2,3,4,5];\n\tforeach(a).each(function(v) { console.log(v); });\n  \nWrite each object key=value pair to console:\n\n\ta = {'foo':1,'bar':2};\n\tforeach(a).each(function(v, k) { console.log(k+\"=\"+v); });\n\nWrite single value to console:\n\n\ta = 'foobar';\n\tforeach(a).each(function(v) { console.log(v); });\n\nSplit\n-----\n\nSplits string into smaller chunks using regexp:\n\n\tvar vector = split(/: */, \"One: Two:  Three:   End\", 2);\n\nResulting `vector` will be:\n\n\t[\"One\", \"Two:  Three:   End\"]\n\nPlease note: Standard JavaScript split does NOT append the rest of the string in the last element.\n\nJoin\n----\n\nJoins an array into a string with multiple separators:\n\n\tvar str = join([\"a\",\"b\",\"c\"], [\":\",\".\"]);\n\nResulting `str` will be `\"a:b.c\"`.\n\nDefault separator is `\",\"`. \n\nTo change the default, use:\n\n\tvar str = join([\"a\",\"b\",\"c\"], [\":\"], \".\");\n\nPass\n----\n\nPasses the values from array into the callback as arguments:\n\n\tpass([\"a\", \"b\"]).on(function(key, value) { console.log(key+\"=\"+value); });\n\nTo parse a key-value line, we can use `pass` with `split`:\n\n\tpass(split(/ *= */, \"a = b\", 2)).on(function(key,value) { console.log(key+\"=\"+value); });\n\nTrimmers\n--------\n\nTo remove white spaces:\n\n\ta = ltrim('  Hello World '); // a = 'Hello World '\n\ta = rtrim('  Hello World '); // a = '  Hello World'\n\ta = trim('  Hello World ');  // a = 'Hello World'\n\nPadders\n-------\n\nPad string to specific length from left:\n\n\ta = lpad('123', 5, '#'); // a = '##123';\n\ta = rpad('123', 5, '#'); // a = '123##';\n",
  "readmeFilename": "README.md",
  "_id": "snippets@0.0.6",
  "dist": {
    "shasum": "fc65c7be809321fc2c0dcc17f1e1467d365459a7"
  },
  "_from": "snippets@>=0.0.5"
}
